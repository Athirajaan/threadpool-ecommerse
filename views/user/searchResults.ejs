<%- include('../partials/user/userheader') %>

<!-- Search Results Header -->
<div class="bg-gray-100 py-8">
  <div class="container mx-auto px-4">
    <h1 class="text-3xl font-bold text-gray-900 mb-2">Search Results</h1>
    <p class="text-gray-600">
      Showing results for "<span class="font-medium"><%= searchQuery %></span>"
    </p>
  </div>
</div>

<!-- Main Content -->
<div class="flex-1 container mx-auto px-4 py-8">
  <div class="flex gap-8">
    <!-- Sticky Filter Sidebar -->
    <aside class="w-72 flex-shrink-0">
      <div class="bg-white rounded-xl shadow-md sticky top-24 max-h-[calc(100vh-120px)] overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100">
        <div class="p-6">
          <!-- Header with Reset -->
          <div class="flex justify-between items-center mb-8 sticky top-0 bg-white z-10 py-2">
            <h2 class="text-xl font-bold text-gray-800">Filters</h2>
            <button id="resetFilters" 
                    class="hidden text-sm text-blue-600 hover:text-blue-800 font-medium transition-colors duration-200">
              Clear All
            </button>
          </div>
          <!-- Sort Options -->
          <div class="mb-8 border-b border-gray-100 pb-6">
            <h3 class="text-md font-semibold text-gray-700 mb-4">Sort By</h3>
            <div class="space-y-3">
              <label class="flex items-center group cursor-pointer hover:bg-gray-50 p-2 rounded-lg transition-colors duration-200">
                <input type="radio" name="sort" value="newest" checked class="form-radio h-4 w-4 text-blue-600 border-gray-300 focus:ring-blue-500">
                <span class="ml-3 text-gray-700 group-hover:text-gray-900">Newest First</span>
              </label>
              <!-- ... other sort options ... -->
            </div>
          </div>

          <!-- Categories -->
          <div class="mb-8 border-b border-gray-100 pb-6">
            <h3 class="text-md font-semibold text-gray-700 mb-4">Categories</h3>
            <div class="space-y-3">
              <% category.forEach(cat => { %>
                <label class="flex items-center group cursor-pointer hover:bg-gray-50 p-2 rounded-lg transition-colors duration-200">
                  <input type="checkbox" 
                         class="category-checkbox form-checkbox h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
                         value="<%= cat._id %>">
                  <span class="ml-3 text-gray-700 group-hover:text-gray-900"><%= cat.name %></span>
                </label>
              <% }) %>
            </div>
          </div>

          <!-- Sizes -->
          <div class="mb-8 border-b border-gray-100 pb-6">
            <h3 class="text-md font-semibold text-gray-700 mb-4">Sizes</h3>
            <div class="flex flex-wrap gap-3">
              <% ['S', 'M', 'L', 'XL'].forEach(size => { %>
                <button 
                  class="size-option w-12 h-12 rounded-lg border-2 border-gray-200 text-gray-600 hover:border-blue-500 hover:text-blue-500 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                  data-size="<%= size %>">
                  <%= size %>
                </button>
              <% }) %>
            </div>
          </div>

          <!-- Price Range -->
          <div class="mb-6">
            <!-- ... price range options ... -->
          </div>
        </div>
      </div>
    </aside>

    <!-- Products Grid Container -->
    <div class="flex-1">
      <!-- Products Section -->
      <div class="flex-1">
        <!-- Sort Options -->

        <!-- Products Grid -->
        <div id="productsGrid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
          <% if (products.length === 0) { %>
            <div class="col-span-full text-center py-12">
              <h3 class="text-xl text-gray-600">No products found matching your search.</h3>
              <p class="mt-2 text-gray-500">Try adjusting your search terms.</p>
            </div>
          <% } else { %>
            <% products.forEach(product => { %>
              <%- include('../partials/productCard', { product: product }) %>
            <% }) %>
          <% } %>
        </div>

        <!-- Loading Indicator -->
        <div id="loadingIndicator" class="hidden text-center py-8">
          <div class="inline-block animate-spin rounded-full h-8 w-8 border-4 border-gray-200 border-t-blue-600"></div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
let currentPage = 1;
let loading = false;
let hasMore = <%= hasMore %>;
const searchQuery = '<%= searchQuery %>';

// Infinite scroll function
function loadMoreProducts() {
  if (loading || !hasMore) return;
  
  loading = true;
  const loadingIndicator = document.getElementById('loadingIndicator');
  loadingIndicator.classList.remove('hidden');
  
  const sortSelect = document.getElementById('sortSelect');
  const sortValue = sortSelect.value;
  
  fetch(`/search?q=${searchQuery}&page=${currentPage + 1}&sort=${sortValue}`, {
    headers: {
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
    .then(response => response.json())
    .then(data => {
      const productsGrid = document.getElementById('productsGrid');
      
      data.products.forEach(product => {
        const productCard = createProductCard(product);
        productsGrid.insertAdjacentHTML('beforeend', productCard);
      });
      
      currentPage++;
      hasMore = data.hasMore;
      loading = false;
      loadingIndicator.classList.add('hidden');
    })
    .catch(error => {
      console.error('Error loading more products:', error);
      loading = false;
      loadingIndicator.classList.add('hidden');
    });
}

// Create product card HTML
function createProductCard(product) {
  return `
    <div class="group">
      <div class="relative bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
        <a href="/productDetails?id=${product._id}" class="block">
          <div class="aspect-w-1 aspect-h-1 w-full relative overflow-hidden">
            <img src="${product.productImage[0]}" 
                 alt="${product.productName}" 
                 class="w-full h-full object-cover transition-opacity duration-300 group-hover:opacity-0">
            <img src="${product.productImage[1] || product.productImage[0]}" 
                 alt="${product.productName}" 
                 class="w-full h-full object-cover absolute inset-0 opacity-0 transition-opacity duration-300 group-hover:opacity-100">
          </div>
        </a>
        <div class="p-4">
          <h3 class="text-lg font-medium text-gray-900 mb-2">${product.productName}</h3>
          <div class="flex items-center justify-between">
            <div class="flex items-baseline">
              <span class="text-lg font-bold text-gray-900">₹${product.salePrice}</span>
              <span class="ml-2 text-sm text-gray-500 line-through">₹${product.regularPrice}</span>
            </div>
            <span class="text-sm font-medium text-green-600">
              ${Math.round((product.regularPrice - product.salePrice) / product.regularPrice * 100)}% OFF
            </span>
          </div>
        </div>
      </div>
    </div>
  `;
}

// Intersection Observer for infinite scroll
const observer = new IntersectionObserver((entries) => {
  if (entries[0].isIntersecting && !loading) {
    loadMoreProducts();
  }
});

// Observe the loading indicator
observer.observe(document.getElementById('loadingIndicator'));

// Sort change handler
document.getElementById('sortSelect').addEventListener('change', (e) => {
  currentPage = 1;
  hasMore = true;
  const productsGrid = document.getElementById('productsGrid');
  productsGrid.innerHTML = '';
  loadMoreProducts();
});
</script>

<%- include('../partials/user/userfooter') %> 