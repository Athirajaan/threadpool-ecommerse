<%- include('../partials/user/userheader') %> 
<% if (items.length === 0) { %>
  <div class="text-center py-10">
    <img src="/images/emptyCart.jpg" alt="Empty Cart" class="mx-auto w-100 h-80">
    <h2 class="text-2xl font-bold mt-4">Your Cart is Empty</h2>
    <p class="text-gray-600 mt-2 mb-6">Add some items to your cart to see them here!</p>
  </div>
<% } else { %>
<div class="max-w-7xl mx-auto p-6">
  <!-- Main Container -->
  <div class="flex flex-col lg:flex-row gap-6">
    <!-- Left: Products Section -->
    <div class="bg-white w-full lg:w-2/3 p-6 rounded-lg shadow-md flex flex-col">
      <!-- Actions on Top -->
      <div class="flex items-center justify-between mb-6">
       
        <h2 class="text-lg font-semibold text-yellow-500">Your Cart   (<%= items.length %> Items)         </h2>
        <div class="flex items-center space-x-4">
          <button class="text-sm text-blue-500 font-semibold hover:underline" onclick="showModal('removeAllModal')">Remove All</button>
          <button class="text-sm text-blue-500 font-semibold hover:underline" onclick="showModal('moveAllToWishlistModal')">Move All to Wishlist</button>
        </div>
      </div>
      <!-- Cart Items -->
      <div class="space-y-6">
       
          <% items.forEach(item => { %>
            <div class="flex items-start gap-4 border-b border-gray-300">
              <img src="<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" class="w-24 h-24 rounded-lg">
              <div class="ml-4 flex-1">
                <h3 class="text-sm font-medium"><%= item.productId.productName %></h3>
                <!-- <p class="text-sm text-gray-600">Description: <%= item.productId.description %></p> -->
                <div class="flex items-center space-x-4 mt-2">
                  <button 
        class=" px-2 py-1 text-sm size-btn" 
        data-item-id="<%= item.productId._id %>" >
        Size: <span id="size-display-<%= item.productId._id %>"><%= item.size%></span>
      </button>
      <button 
      class="border border-gray-300 rounded-lg px-2 py-1 text-sm quantity-btn" 
      data-item-id="<%= item.productId._id %>" 
      data-item-size="<%= item.size %>"
      onclick="openQuantityModal('<%= item.productId._id %>', '<%= item.size %>')">
      Qty: <span id="quantity-display-<%= item.productId._id %>-<%= item.size %>">
        <%= item.quantity %>
      </span>
    </button>
    
                </div>
                <p class="text-sm text-green-500 font-medium mt-2">7 days return available</p>
              </div>
              <div class="text-right">
                <div class="flex items-center justify-between space-x-2">
                  <p class="text-lg font-semibold text-gray-900" id="total-price-display-<%= item.productId._id %>-<%= item.size %>">₹<%= item.totalPrice %></p>

                  <p id="regular-price-display-<%= item.productId._id %>-<%= item.size %>" class="text-sm font-semibold text-gray-400 line-through">
                    ₹<%= item.productId.regularPrice * item.quantity %>
                  </p>
                  
                </div>
                <p class="text-sm text-green-500 font-medium">
                  <%= Math.round(((item.productId.regularPrice - item.productId.salePrice) / item.productId.regularPrice) * 100) %>% OFF
                </p>
                <!-- Remove Icon -->
                <i class="fa fa-trash text-red-500 hover:text-red-700 cursor-pointer mt-4" onclick="removeItem('<%= item.productId._id %>')" title="Remove from cart"></i>
              </div>
            </div>
          <% }); %>
       
      </div>
    </div>

    <!-- Right: Price Details Section -->
    <div class="bg-white w-full lg:w-1/3 p-6 rounded-lg shadow-md flex flex-col">
      <!-- Apply Coupon Section -->
      <div class="mb-6">
        <h3 class="text-lg font-semibold mb-4">Apply Coupon</h3>
        <div class="flex items-center space-x-4">
          <select id="couponDropdown" class="w-2/3 border border-gray-300 rounded-lg px-4 py-2 text-sm">
            <option value="">Select a Coupon</option>
            <option value="NEW10">NEW10 - 10% Off</option>
            <option value="FREESHIP">FREESHIP - Free Shipping</option>
            <option value="SAVE20">SAVE20 - ₹20 Off</option>
          </select>
          <button id="applyCouponBtn" class="w-1/3 bg-blue-500 text-white py-2 rounded-lg font-semibold hover:bg-blue-600">Apply</button>
        </div>
        <div id="couponFeedback" class="mt-4 hidden text-sm rounded-lg p-3 text-white"></div>
      </div>

      <!-- Price Details Section -->
      <h3 class="text-lg font-semibold mb-4">Price Details (<%= items.length %> Items)</h3>
      <div class="space-y-3">
        <div class="flex justify-between text-sm text-gray-600">
          <p>Total MRP:</p>
          <p id="totalMRP">₹<%= totalMRP %></p>
        </div>
        <div class="flex justify-between text-sm text-gray-600">
          <p>Discount on MRP:</p>
          <p id="discountOnMRP">-₹<%= discountOnMRP %></p>
        </div>
        <div class="flex justify-between text-sm text-gray-600">
          <p>Coupon Discount:</p>
          <p id="couponDiscount">-₹0</p>
        </div>
        <div class="flex justify-between text-sm text-gray-600">
          <p>Platform Fee:</p>
          <p>₹<%= platformFee %></p>
        </div>
        <div class="flex justify-between text-sm text-gray-600">
          <p>Shipping Fee:</p>
          <p>Free</p>
        </div>
      </div>
      <div class="flex justify-between mt-6 text-lg font-semibold">
        <p>Total Amount:</p>
        <p id="totalAmount">₹<%= finalAmount %></p>
      </div>
      <a href="/checkout">
        <button class="mt-6 w-full bg-yellow-500 text-black py-3 rounded-lg font-semibold hover:bg-yellow-600">
          PLACE ORDER
        </button>
      </a>
      
    </div>
    
 <% } %>
  </div>

 </div>
     
    <!-- Example of Remove All Modal -->
    <div id="removeAllModal" class="hidden fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center">
      <div class="bg-white p-4 rounded-lg shadow-lg w-96">
        <p class="text-sm text-gray-800 mb-4">Are you sure you want to remove these products?</p>
        <div class="flex justify-end space-x-4">
          <button class="text-red-500 hover:text-red-700" onclick="removeAllItems()">Remove</button>
          <button class="text-blue-500 hover:text-blue-700" onclick="moveAllToWishlist()">Move to Wishlist</button>
        </div>
      </div>
    </div>
    
    
<!-- Move All to Wishlist Modal -->
<div id="moveAllToWishlistModal" class="hidden fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center">
  <div class="bg-white p-4 rounded-lg shadow-lg w-96">
    <p class="text-sm text-gray-800 mb-4">Are you sure you want to move these items to the wishlist?</p>
    <div class="flex justify-end space-x-4">
      <button class="text-gray-500 hover:text-gray-700" onclick="closeModal('moveAllToWishlistModal')">Cancel</button>
      <button class="text-blue-500 hover:text-blue-700" onclick="moveAllToWishlist()">Move to Wishlist</button>
    </div>
  </div>
</div>

<!-- Remove Single Item Modal -->
<div id="removeItemModal" class="hidden fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center">
  <div class="bg-white p-4 rounded-lg shadow-lg w-96">
    <p class="text-sm text-gray-800 mb-4">Are you sure you want to remove this item from the cart?</p>
    <div class="flex justify-end space-x-4">
      <button class="text-red-500 hover:text-red-700" onclick="removeItem()">Remove</button>
      <button class="text-blue-500 hover:text-blue-700" onclick="moveToWishlist()">Move to Wishlist</button>
    </div>
  </div>
</div>

<div id="quantityModal" class="hidden fixed inset-0 bg-gray-900 bg-opacity-50 flex justify-center items-center">
  <div class="bg-white p-6 rounded-lg shadow-lg">
    <h2 class="text-lg font-semibold mb-4">Select Quantity</h2>
    <div class="grid grid-cols-5 gap-4">
      <button class="py-2 px-4 border rounded-lg" onclick="updateQuantity(1)">1</button>
      <button class="py-2 px-4 border rounded-lg" onclick="updateQuantity(2)">2</button>
      <button class="py-2 px-4 border rounded-lg" onclick="updateQuantity(3)">3</button>
      <button class="py-2 px-4 border rounded-lg" onclick="updateQuantity(4)">4</button>
      <button class="py-2 px-4 border rounded-lg" onclick="updateQuantity(5)">5</button>
    </div>
    <button class="mt-4 bg-pink-500 text-white py-2 px-4 rounded-lg" onclick="closeModal('quantityModal')">Done</button>
  </div>
</div>

  <script>
    const applyCouponBtn = document.getElementById('applyCouponBtn');
    const couponDropdown = document.getElementById('couponDropdown');
    const couponFeedback = document.getElementById('couponFeedback');
    const couponDiscount = document.getElementById('couponDiscount');
    const totalAmount = document.getElementById('totalAmount');

    const originalTotal = 11515; 
    const coupons = {
      NEW10: 0.1,
      FREESHIP: 0,
      SAVE20: 20,
    };

    applyCouponBtn.addEventListener('click', () => {
      const selectedCoupon = couponDropdown.value;
      if (!selectedCoupon) {
        showFeedback('Please select a coupon!', 'bg-red-500');
        return;
      }

      const discount = coupons[selectedCoupon];
      let discountAmount = 0;
      if (typeof discount === 'number' && discount < 1) {
        discountAmount = originalTotal * discount;
      } else if (typeof discount === 'number') {
        discountAmount = discount;
      }

      couponDiscount.textContent = `-₹${discountAmount.toFixed(2)}`;
      totalAmount.textContent = `₹${(originalTotal - discountAmount).toFixed(2)}`;
      showFeedback(`Coupon "${selectedCoupon}" applied successfully!`, 'bg-green-500');
    });

    function showFeedback(message, colorClass) {
      couponFeedback.textContent = message;
      couponFeedback.className = `mt-4 text-sm rounded-lg p-3 text-white ${colorClass}`;
      couponFeedback.classList.remove('hidden');
      setTimeout(() => {
        couponFeedback.classList.add('hidden');
      }, 3000);
    }




  let currentItemId = null;



function closeModal(modalId) {
  document.getElementById(modalId).classList.add('hidden');
}


let currentItemForQuantity = null;

function openQuantityModal(itemId, itemSize) {
  currentItemForQuantity = { itemId, itemSize };

  // Fetch stock data for the selected item
  fetch(`/get-stock/${itemId}/${itemSize}`)
    .then((response) => response.json())
    .then((data) => {
      const buttons = document.querySelectorAll('#quantityModal button');
      buttons.forEach((button) => {
        const quantity = parseInt(button.textContent, 10);
        button.disabled = quantity > data.stock; // Disable buttons exceeding stock
      });
    })
    .catch((error) => console.error('Error fetching stock:', error));

  document.getElementById('quantityModal').classList.remove('hidden');
}



function updateQuantity(selectedQuantity) {
  if (currentItemForQuantity) {
    const { itemId, itemSize } = currentItemForQuantity;
    fetch('/update-cart-quantity', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ itemId, itemSize, quantity: selectedQuantity }), // Include size in request
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.success) {
          // Update the quantity in the UI
          const quantityDisplayElement = document.querySelector(
            `#quantity-display-${itemId}-${itemSize}`
          );
          if (quantityDisplayElement) {
            quantityDisplayElement.textContent = selectedQuantity; // Update quantity in UI
          }

          // Update the total price in the UI
          const totalPriceElement = document.querySelector(
            `#total-price-display-${itemId}-${itemSize}` // Added itemId and itemSize to ensure correct selection
          );
          if (totalPriceElement) {
            totalPriceElement.textContent = `₹${data.totalPrice}`; // Update total price
          }
          const regularPriceElement = document.querySelector(
            `#regular-price-display-${itemId}-${itemSize}` // Unique selector for regular price
          );
          if (regularPriceElement) {
            const regularPrice = data.regularPrice; // Regular price should be sent from the backend
            regularPriceElement.textContent = `₹${regularPrice * selectedQuantity}`; // Update the regular price with new quantity
          }
 
          document.querySelector("#totalMRP").textContent = `₹${data.totalMRP}`;
          document.querySelector("#discountOnMRP").textContent = `₹${data.discountOnMRP}`;
          document.querySelector("#totalAmount").textContent = `₹${data.finalAmount}`;
          // window.location.reload();
        } else {
          alert(data.message);
        }
      })
      .catch((error) => console.error('Error updating quantity:', error));
  }
  closeModal('quantityModal');
}






</script>
</div>
</div>


<%- include('../partials/user/userfooter') %> 